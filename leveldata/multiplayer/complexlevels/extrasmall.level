startNum = 0
function ringAdd(fPosX, fPosY, fPosZ, rDistTable, fAxis1, fAxis2, fWidth, fThickness, fRotY, fRotZ, fArc1, fArc2, iMode)
	local width, thick, arc, theta, thetaX, thetaY, thetaZ, rotyX, rotyY, rotyZ, rotzX, rotzY, rotzZ, cooX, cooY, cooZ = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	local minAxis = min(fAxis1, fAxis2)
	local majAxis = max(fAxis1, fAxis2)
	local minArc = min(fArc1, fArc2)
	local maxArc = max(fArc1, fArc2)
	for k, iCount in rDistTable do
		for i = 1, iCount.number do
			if (iMode == 1) then		--if set to random mode
				theta = random(minArc, maxArc)
				thetaX = cos(theta)*(majAxis + random(fWidth/-2, fWidth/2))
				thetaY = sin(theta)*sqrt((majAxis + random(fWidth/-2, fWidth/2))^2 - majAxis^2 + minAxis^2)
				thetaZ = random(fThickness/-2, fThickness/2)
			elseif (iMode == 0) then		--if set to non-random mode
				theta = minArc + arc
				thetaX = cos(theta)*majAxis		--(majAxis + fWidth/-2 + width)
				thetaY = sin(theta)*minAxis		--sqrt((majAxis + fWidth/-2 + width)^2 - majAxis^2 + minAxis^2)
				thetaZ = 0		--(fThickness/-2 + thick)
			end
			arc = arc + (maxArc-minArc)/iCount.number
			width = width + fWidth/iCount.number
			thick = thick + fThickness/iCount.number
			rotyX = sin(fRotY)*thetaZ + cos(fRotY)*thetaX
			rotyY = thetaY
			rotyZ = cos(fRotY)*thetaZ - sin(fRotY)*thetaX
			rotzX = cos(fRotZ)*rotyX - sin(fRotZ)*rotyY
			rotzY = sin(fRotZ)*rotyX + cos(fRotZ)*rotyY
			rotzZ = rotyZ
			cooX = rotzX
			cooY = rotzY
			cooZ = rotzZ
			if (iCount.class == "Point") then
				if (iCount.name == "StartPos") then
					if startNum == 0 then
					  addPoint(iCount.name .. startNum, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, -90, 0})
					elseif startNum == 1 then
					  addPoint(iCount.name .. startNum, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 90, 0})
					elseif startNum == 2 then 
					  addPoint(iCount.name .. startNum, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, -90, 0}) 
					elseif startNum == 3 then 
					  addPoint(iCount.name .. startNum, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 90, 0}) 					
					else
					  addPoint(iCount.name .. startNum, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 90, 0})    					
					end  
					startNum = startNum + 1					
				else
					addPoint(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})
				end
			elseif (iCount.class == "Sphere") then
				addSphere(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.size)
			elseif (iCount.class == "Camera") then
				addCamera(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})
			elseif (iCount.class == "Squadron") then
				addSquadron(iCount.name .. (i-1), iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.player, iCount.rotation, 0, 0)
			elseif (iCount.class == "Asteroid") then
				addAsteroid(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 100, 0, 0, 0, 0)
			elseif (iCount.class == "Salvage") then
				addSalvage(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 100, 0, 0, 0, 0)
			elseif (iCount.class == "Pebble") then
				addPebble(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 0, 0, 0)
			elseif (iCount.class == "Cloud") then
				addCloud(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "DustCloud") then
				addDustCloud(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "Nebula") then
				addNebula(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "EasyPatch") then
				easyPatch(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)			
			elseif (iCount.class == "EasyPatch1") then
				easyPatch1(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)	
      elseif (iCount.class == "EasyPatch2") then
				easyPatch2(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)					
			end			
		end
	end
end
function asteroidAdd(fPosX, fPosY, fPosZ, sLayout, rDistTable, a, b, c, fRotY, fRotZ)	
	local rel, cooX, cooY, cooZ = 0, 0, 0, 0
	for k, iCount in rDistTable do
		rel = rel + iCount.number
	end
	for k, iCount in rDistTable do
		local minAB, maxAB = min(a, b), max(a, b)
		for i = 1, iCount.number do		--for i = 1, num*iCount.number do
			local r, u, v, l, w, h = random(minAB, maxAB), random(0, 180), random(0, 360), random(-0.5*a, 0.5*a), random(-0.5*b, 0.5*b), random(-0.5*c, 0.5*c)
			if sLayout == "Cylinder" then
				cooX = cos(fRotZ)*(sin(fRotY)*h + cos(fRotY)*r*cos(v)) - sin(fRotZ)*r*sin(v)
				cooY = sin(fRotZ)*(sin(fRotY)*h + cos(fRotY)*r*cos(v)) + cos(fRotZ)*r*sin(v)
				cooZ = cos(rotY)*h - sin(rotY)*r*cos(v)
			elseif sLayout == "Sphere" then
				cooX = sqrt(r^2-(r*cos(u))^2)*cos(v)
				cooY = sqrt(r^2-(r*cos(u))^2)*sin(v)
				cooZ = r*cos(u);
			elseif sLayout == "Box" then
				cooX = cos(fRotZ)*(sin(fRotY)*h + cos(fRotY)*l) - sin(fRotZ)*w
				cooY = sin(fRotZ)*(sin(fRotY)*h + cos(fRotY)*l) + cos(fRotZ)*w
				cooZ = cos(fRotY)*h - sin(fRotY)*l
			end
			if (iCount.class == "Point") then
				if (iCount.name == "StartPos") then
					addPoint(iCount.name .. startNum, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})
					startNum = startNum + 1					
				else
					addPoint(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})
				end
			elseif (iCount.class == "Sphere") then
				addSphere(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.size)
			elseif (iCount.class == "Camera") then
				addCamera(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})
			elseif (iCount.class == "Squadron") then
				addSquadron(iCount.name .. (i-1), iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.player, iCount.rotation, 0, 0)
			elseif (iCount.class == "Asteroid") then
				addAsteroid(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 100, 0, 0, 0, 0)
			elseif (iCount.class == "Salvage") then
				addSalvage(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 100, 0, 0, 0, 0)
			elseif (iCount.class == "Pebble") then
				addPebble(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 0, 0, 0)
			elseif (iCount.class == "Cloud") then
				addCloud(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "DustCloud") then
				addDustCloud(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "Nebula") then
				addNebula(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "EasyPatch") then
				easyPatch(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)			
			elseif (iCount.class == "EasyPatch1") then
				easyPatch1(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)		
      elseif (iCount.class == "EasyPatch2") then
				easyPatch2(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)						
			end
		end
	end
end
function easyPatch(epX, epZ, epY)	
	--6 latch
	addAsteroid("Asteroid_5", {epX+0,                epZ+0,                epY+0,                }, 100, 0, 0, 0, 0)
	addAsteroid("Asteroid_4", {epX+random(-200,200), epZ+random(-200,200), epY+random(550,650),  }, 100, 0, 0, 0, 0)
	addAsteroid("Asteroid_3", {epX+random(-200,200), epZ+random(450,550),  epY+random(-200,200), }, 100, 0, 0, 0, 0)  
	addAsteroid("Asteroid_2", {epX+random(400,500),  epZ+random(-200,200), epY+random(-200,200), }, 100, 0, 0, 0, 0)	
	addAsteroid("Asteroid_1", {epX+random(-200,200), epZ+random(-200,200), epY-random(350,450),  }, 100, 0, 0, 0, 0)	
	addAsteroid("Asteroid_1", {epX+random(-200,200), epZ-random(350,450),  epY+random(-200,200), }, 100, 0, 0, 0, 0)	
end
function easyPatch1(epX, epZ, epY)
  --7 latch		
	addAsteroid("Asteroid_5", {epX+0,                epZ+0,                epY+0,                }, 100, 0, 0, 0, 0)
	addAsteroid("Asteroid_4", {epX+random(-200,200), epZ+random(-200,200), epY+random(550,650),  }, 100, 0, 0, 0, 0)
	addAsteroid("Asteroid_3", {epX+random(-200,200), epZ+random(450,550),  epY+random(-200,200), }, 100, 0, 0, 0, 0)
  addAsteroid("Asteroid_3", {epX+random(450,550),  epZ+random(-200,200), epY+random(-200,200), }, 100, 0, 0, 0, 0)	
	addAsteroid("Asteroid_2", {epX+random(-200,200), epZ-random(400,500),  epY+random(-200,200), }, 100, 0, 0, 0, 0)	
	addAsteroid("Asteroid_1", {epX+random(-200,200), epZ+random(-200,200), epY-random(350,450),  }, 100, 0, 0, 0, 0)	
	addAsteroid("Asteroid_1", {epX+random(-200,200), epZ-random(350,450),  epY+random(-200,200), }, 100, 0, 0, 0, 0)	
end
function easyPatch2(epX, epZ, epY)	
	--8 latch		
	addAsteroid("Asteroid_5", {epX+0,                epZ+0,                epY+0,                }, 100, 0, 0, 0, 0)
	addAsteroid("Asteroid_4", {epX+random(-200,200), epZ+random(-200,200), epY+random(550,650),  }, 100, 0, 0, 0, 0)
	addAsteroid("Asteroid_3", {epX+random(-200,200), epZ+random(450,550),  epY+random(-200,200), }, 100, 0, 0, 0, 0)
  addAsteroid("Asteroid_3", {epX+random(450,550),  epZ+random(-200,200), epY+random(-200,200), }, 100, 0, 0, 0, 0)
  addAsteroid("Asteroid_3", {epX-random(450,550),  epZ+random(-200,200), epY+random(-200,200), }, 100, 0, 0, 0, 0)	
	addAsteroid("Asteroid_2", {epX+random(-200,200), epZ-random(400,500),  epY+random(-200,200), }, 100, 0, 0, 0, 0)	
	addAsteroid("Asteroid_1", {epX+random(-200,200), epZ+random(-200,200), epY-random(350,450),  }, 100, 0, 0, 0, 0)
  addAsteroid("Asteroid_1", {epX+random(350,450),  epZ+random(350,450),  epY+random(-200,200), }, 100, 0, 0, 0, 0)		
end
levelDesc = "Extra Small"
maxPlayers = 6
player =
{
	{id = 0, name = "Vaygr", resources = 1500, raceID = 2, startPos = 1,},
	{id = 1, name = "Hiigaran", resources = 1500, raceID = 1, startPos = 1,},
	{id = 2, name = "Vaygr", resources = 1500, raceID = 2, startPos = 1,},	
	{id = 3, name = "Hiigaran", resources = 1500, raceID = 1, startPos = 1,},		
	{id = 4, name = "Vaygr", resources = 1500, raceID = 2, startPos = 1,},	
	{id = 5, name = "Hiigaran", resources = 1500, raceID = 1, startPos = 1,},		
}
function DetermChunk()
    addPoint("StartPos0", 
    { -2600, 0, 0} , 
    { 0, 180, 0, })
    addPoint("StartPos1", 
    { 0, 0, -2400} , 
    { 0, 90, 0, })
    addPoint("StartPos2", 
    { 2520, 0, 0} , 
    { 0, 0, 0, })
    addPoint("StartPos3", 
    { 0, 0, 2560} , 
    { 0, -90, 0, })
    addPoint("StartPos4", 
    { 0, 2500, 0} , 
    { 0, 0, 0, })
    addPoint("StartPos5", 
    { 0, -2580, 0} , 
    { 0, 180, 0, })

	addSquadron("skybox_starfield_left", "skybox_starfield_left", {10000000, 0, 0}, -1, {0, 0, 0}, 0, 0)
	addSquadron("skybox_starfield_bottom", "skybox_starfield_bottom", {0, -10000000, 0}, -1, {0, 0, 0}, 0, 0)
	addSquadron("skybox_EarthAndMoon_back", "skybox_EarthAndMoon_back", {0, 0, -10000000}, -1, {0, 0, 0}, 0, 0)
	addSquadron("skybox_starfield_front", "skybox_starfield_front", {0, 0, 10000000}, -1, {0, 0, 0}, 0, 0)
	addSquadron("skybox_starfield_top", "skybox_starfield_top", {0, 10000000, 0}, -1, {0, 0, 0}, 0, 0)
	addSquadron("skybox_starfield_right", "skybox_starfield_right", {-10000000, 0, 0}, -1, {0, 0, 0}, 0, 0)

  --default nebula, this must be here
	addNebula("nebula_damage3", "nebula_damage3", {0, 100000, 0}, { 0, 0, 0, 0}, 0, 0)
	addNebula("nebula_damage4", "nebula_damage4", {0, 100000, 0}, { 0, 0, 0, 0}, 0, 0)
  addNebula("nebula_damage5", "nebula_damage5", {0, 100000, 0}, { 0, 0, 0, 0}, 0, 0)
  addNebula("nebula_damage6", "nebula_damage6", {0, 100000, 0}, { 0, 0, 0, 0}, 0, 0)
	addNebula("nebula_damage7", "nebula_damage7", {0, 100000, 0}, { 0, 0, 0, 0}, 0, 0)	
	setWorldBoundsInner({0, 0, 0}, {8000, 8000, 8000})
	setWorldBoundsOuter({0, 0, 0}, {9000, 9000, 9000})
	

  local x=0
  local y=0
  local z=0
  local r = 2100	--sqrt(x^2+y^2+z^2)
  local h = 500	--tolerance
	local n = 0
	local ast_num = 0
	while n<5 do
		local randx = random(-4200,4200)
		local randy = random(-4200,4200)
		local randz = random(-4200,4200)
		if (randx-x)^2+(randz-z)^2+(randy-y)^2<(r+h)^2 and (randx-x)^2+(randz-z)^2+(randy-y)^2>(r-h)^2 then
			local ran=random(0,120)
		  if ran>100 then
		  	addSquadron("zzz_praxis_chunk_1", "asteroid_3_ice_nosalvage", {randx,randy,randz}, -1, {atan(-randy/randz), atan(-randz/randx), random(0,360)}, 0, 0)
		  	n=n+1
		  elseif ran>80 then
  			addSquadron("zzz_praxis_chunk_2", "asteroid_4_ice_nosalvage", {randx,randy,randz}, -1, {atan(-randy/randz), atan(-randz/randx), random(0,360)}, 0, 0)
  			n=n+1
		  elseif ran>60 then
  			addSquadron("zzz_praxis_chunk_3", "asteroid_5_ice_nosalvage", {randx,randy,randz}, -1, {atan(-randy/randz), atan(-randz/randx), random(0,360)}, 0, 0)
  			n=n+1
		  elseif ran>40 then
  			addSquadron("zzz_praxis_chunk_4", "asteroid_3_ice_nosalvage_big", {randx,randy,randz}, -1, {atan(-randy/randz), atan(-randz/randx), random(0,360)}, 0, 0)
  			n=n+1
		  elseif ran>20 then
  			addSquadron("zzz_praxis_chunk_5", "asteroid_4_ice_nosalvage_big", {randx,randy,randz}, -1, {atan(-randy/randz), atan(-randz/randx), random(0,360)}, 0, 0)
  			n=n+1
		  elseif ran>=0 then
  			addSquadron("zzz_praxis_chunk_6", "asteroid_5_ice_nosalvage_big", {randx,randy,randz}, -1, {atan(-randy/randz), atan(-randz/randx), random(0,360)}, 0, 0)
  			n=n+1
		  end
		elseif (randx-x)^2+(randz-z)^2+(randy-y)^2>(r+h)^2 and (randx-x)^2+(randz-z)^2+(randy-y)^2<6000^2 and randy^2 < 6000^2 and ast_num < 6 then
			local ast=random(-1000,100)
			if ast>80 then
		  	addAsteroid("Asteroid_5", {randx,randy,randz}, random(70,100), 0, 0, 0, 0)
		  	addNebula("Nebula4_OLD1", "Mp_Bentusi_Radiation", {randx,randy,randz}, {0.00, 0.50, 0.00, 1.00}, 0.0, 1000)
		  	ast_num = ast_num + 1
			elseif ast>60 then
		  	addAsteroid("Asteroid_4", {randx,randy,randz}, random(70,100), 0, 0, 0, 0)
		  	addNebula("Nebula4_OLD1", "Mp_Bentusi_Radiation", {randx,randy,randz}, {0.00, 1.00, 0.00, 1.00}, 0.0, 1000)
		  	ast_num = ast_num + 1
		  elseif ast>40 then
		  	addAsteroid("Asteroid_3", {randx,randy,randz}, random(70,100), 0, 0, 0, 0)
		  	addNebula("Nebula4_OLD1", "Mp_Bentusi_Radiation", {randx,randy,randz}, {0.00, 0.50, 0.50, 1.00}, 0.0, 1000)
		  	ast_num = ast_num + 1
		  elseif ast>20 then
		  	addAsteroid("Asteroid_2", {randx,randy,randz}, random(70,100), 0, 0, 0, 0)
		  	addNebula("polysurface5", "m07_foundry_radiation", {randx,randy,randz}, {0.00, 1.00, 0.00, 1.00}, 0.0, 1000)
		  elseif ast>0 then
		  	addAsteroid("Asteroid_1", {randx,randy,randz}, random(70,100), 0, 0, 0, 0)
		  	addNebula("polysurface5", "m07_foundry_radiation", {randx,randy,randz}, {0.00, 0.50, 0.50, 1.00}, 0.0, 1000)
		  end
		end
	end
	
  local x = 0 + random(-90,90)
	local y = 0 + random(-90,90)
	local z = 0 + random(-90,90)
	local miningbase = {"meg_headshotasteroid", "meg_chimera_nobuild","meg_reinforcementpad"}
  addSquadron("shelter", miningbase[random(1,2)], {x+random(-100,100), y+random(-100,100), z+random(-100,100)}, -1, {random(0,360), random(0,360), random(0,360)}, 0, 0)
  local gamma = random(0,360)
  local small_r = 2000
  local large_r = 5000
  for i = 1, 29, 1 do
  	addSquadron("light", "meg_NavBouy", {x+sin(gamma)*small_r, y+random(-100,100), z+cos(gamma)*small_r}, -1, {0, gamma+180, 0}, 0, 0)
  	gamma=gamma+12
  end
	
	local playerPositionRing =
	{
		Point0 =
		{
			class = "Point",
			name = "StartPos",
			rotation = "toCenter",
			teams = 0,
			bias = 0,
			number = 2,
		},              
	}
	local playerPatchRing =
	{
		EasyPatch =
		{
			class = "EasyPatch",
			number = 2,
		},
	}	
	local playerPatchRing1 =
	{
		EasyPatch1 =
		{
			class = "EasyPatch1",
			number = 2,
		},
	}	
	local playerPatchRing2 =
	{
		EasyPatch2 =
		{
			class = "EasyPatch2",
			number = 2,
		},
	}	
	
	addSquadron("berth1", "meg_dreadnaughtberth_med", {65000, -12000, 0}, -1, {-3, 80, 3}, 0, 0)
	addSquadron("berth2", "meg_foundry_med", 					{-60000, -10000, 0}, -1, {4, 70, 4}, 0, 0)
	
	local side=3000
	--addSquadron("Meg_Gehenna_1", "meg_gehenna_3ctm", {-side+random(-100,100), sqrt(2)*side+random(-100,100), side+random(-100,100)}, -1, {random(0,360), random(0,360), random(0,360)}, 0, 0)
  --addSquadron("Meg_Gehenna_1", "meg_gehenna_1ctm", {side+random(-100,100), sqrt(2)*side+random(-100,100), side+random(-100,100)}, -1, {random(0,360), random(0,360), random(0,360)}, 0, 0)
  --addSquadron("Meg_Gehenna_1", "meg_gehenna_3ctm", {-side+random(-100,100), sqrt(2)*side+random(-100,100), -side+random(-100,100)}, -1, {random(0,360), random(0,360), random(0,360)}, 0, 0)
  --addSquadron("Meg_Gehenna_1", "meg_gehenna_1ctm", {side+random(-100,100), sqrt(2)*side+random(-100,100), -side+random(-100,100)}, -1, {random(0,360), random(0,360), random(0,360)}, 0, 0)
	--addSquadron("Meg_Gehenna_1", "meg_gehenna_3ctm", {-side+random(-100,100), -sqrt(2)*side+random(-100,100), side+random(-100,100)}, -1, {random(0,360), random(0,360), random(0,360)}, 0, 0)
  --addSquadron("Meg_Gehenna_1", "meg_gehenna_1ctm", {side+random(-100,100), -sqrt(2)*side+random(-100,100), side+random(-100,100)}, -1, {random(0,360), random(0,360), random(0,360)}, 0, 0)
  --addSquadron("Meg_Gehenna_1", "meg_gehenna_3ctm", {-side+random(-100,100), -sqrt(2)*side+random(-100,100), -side+random(-100,100)}, -1, {random(0,360), random(0,360), random(0,360)}, 0, 0)
  --addSquadron("Meg_Gehenna_1", "meg_gehenna_1ctm", {side+random(-100,100), -sqrt(2)*side+random(-100,100), -side+random(-100,100)}, -1, {random(0,360), random(0,360), random(0,360)}, 0, 0)

  --addSquadron("MediumBattleship", "meg_titan_cruiser", {0, 0, -35000}, -1, {0, 0, 0,}, 0, 0)
  --addSquadron("MediumBattleship", "meg_titan_cruiser", {0, 0, 35000}, -1, {0, 180, 0,}, 0, 0)
	
	--ringAdd(0, 0, 0, playerPositionRing,		5400,		5400,		0,			0,			-3,		0,		-12,	348,	0)
	--ringAdd(0, 0, 0, playerPositionRing,		5400,		5400,		0,			0,			-3,		0,		12,	372,	0)
	--ringAdd(0, 0, 0, playerPatchRing,		5400,		5400,		0,			0,			-3,		0,		     -17,	343,	0)
	--ringAdd(0, 0, 0, playerPatchRing,		5400,		5400,		0,			0,			-3,		0,		     17,	377,	0)
	--ringAdd(0, 0, 0, playerPatchRing1,		6300,		6400,		0,			0,			2,		0,		     0,	360,	0)
	--ringAdd(0, 0, 0, playerPatchRing2,		7400,		7500,		0,			0,			-2,		0,		     0,	360,	0)
	
	for i = 1, 1, 1 do	  
	  addSquadron("meg_veildebris_chunk"..i, "meg_veildebris_chunk"..i, { random(-6000,6000), random(-6000,-4000), random(-6000,6000), }, -1, { random(0,360), random(0,360), random(0,360), }, 0, 0)
    addSalvage("Slv_Chunk_Lrg0"..i, { random(-6000,6000), random(-6000,-4000), random(-6000,6000), }, 100, 0, 0, 0, 0)
    addSalvage("Slv_Chunk_Sml0"..i, { random(-6000,6000), random(-6000,-4000), random(-6000,6000), }, 100, 0, 0, 0, 0)
    addSquadron("meg_veildebris_chunk"..i, "meg_veildebris_chunk"..i, { random(-6000,6000), random(4000,6000), random(-6000,6000), }, -1, { random(0,360), random(0,360), random(0,360), }, 0, 0)
    addSalvage("Slv_Chunk_Lrg0"..i, { random(-6000,6000), random(4000,6000), random(-6000,6000), }, 100, 0, 0, 0, 0)
    addSalvage("Slv_Chunk_Sml0"..i, { random(-6000,6000), random(4000,6000), random(-6000,6000), }, 100, 0, 0, 0, 0)
	end			
	
	for i=0,2,1 do
	  addDustCloud("polySurface1", "DustCloud_0", { random(-2000,2000), random(-2000,2000), -4500, }, { 0, 0.6, 1, 1}, 0, 2500)
		addDustCloud("polySurface1", "DustCloud_0", { random(-2000,2000), random(-2000,2000), 4500, }, { 0, 0.6, 1, 1}, 0, 2500)		
	end
	--ringAdd(0, 0, 0, playerPatchRing1,		4500,		4500,		0,			0,			6,		0,		     -94,	266,	0)
	
end
function NonDetermChunk()
	fogSetActive(0)
	setGlareIntensity(0)
	setLevelShadowColour(0, 0, 0, 1)
	setSensorsManagerCameraDistances(46000, 46000)
	loadBackground("skybox_earthandmoon")
end
