startNum = 0
function ringAdd(fPosX, fPosY, fPosZ, rDistTable, fAxis1, fAxis2, fWidth, fThickness, fRotY, fRotZ, fArc1, fArc2, iMode)
	local width, thick, arc, theta, thetaX, thetaY, thetaZ, rotyX, rotyY, rotyZ, rotzX, rotzY, rotzZ, cooX, cooY, cooZ = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	local minAxis = min(fAxis1, fAxis2)
	local majAxis = max(fAxis1, fAxis2)
	local minArc = min(fArc1, fArc2)
	local maxArc = max(fArc1, fArc2)
	for k, iCount in rDistTable do
		for i = 1, iCount.number do
			if (iMode == 1) then		
				theta = random(minArc, maxArc)
				thetaX = cos(theta)*(majAxis + random(fWidth/-2, fWidth/2))
				thetaY = sin(theta)*sqrt((majAxis + random(fWidth/-2, fWidth/2))^2 - majAxis^2 + minAxis^2)
				thetaZ = random(fThickness/-2, fThickness/2)
			elseif (iMode == 0) then		
				theta = minArc + arc
				thetaX = cos(theta)*majAxis		
				thetaY = sin(theta)*minAxis		
				thetaZ = 0		
			end
			arc = arc + (maxArc-minArc)/iCount.number
			width = width + fWidth/iCount.number
			thick = thick + fThickness/iCount.number
			rotyX = sin(fRotY)*thetaZ + cos(fRotY)*thetaX
			rotyY = thetaY
			rotyZ = cos(fRotY)*thetaZ - sin(fRotY)*thetaX
			rotzX = cos(fRotZ)*rotyX - sin(fRotZ)*rotyY
			rotzY = sin(fRotZ)*rotyX + cos(fRotZ)*rotyY
			rotzZ = rotyZ
			cooX = rotzX
			cooY = rotzY
			cooZ = rotzZ
			if (iCount.class == "Point") then
				if (iCount.name == "StartPos") then
					if startNum == 0 then
					  addPoint(iCount.name .. startNum, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, -135, 0})
					elseif startNum == 1 then
					  addPoint(iCount.name .. startNum, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 45, 0})
					elseif startNum == 2 then 
					  addPoint(iCount.name .. startNum, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, -45, 0}) 
					elseif startNum == 3 then 
					  addPoint(iCount.name .. startNum, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 135, 0}) 
					else
					  addPoint(iCount.name .. startNum, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})    					
					end  
					startNum = startNum + 1					
				else
					addPoint(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})
				end
			elseif (iCount.class == "Sphere") then
				addSphere(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.size)
			elseif (iCount.class == "Camera") then
				addCamera(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})
			elseif (iCount.class == "Squadron") then
				addSquadron(iCount.name .. (i-1), iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.player, iCount.rotation, 0, 0)
			elseif (iCount.class == "Asteroid") then
				addAsteroid(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 100, 0, 0, 0, 0)
			elseif (iCount.class == "Salvage") then
				addSalvage(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 100, 0, 0, 0, 0)
			elseif (iCount.class == "Pebble") then
				addPebble(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 0, 0, 0)
			elseif (iCount.class == "Cloud") then
				addCloud(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "DustCloud") then
				addDustCloud(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "Nebula") then
				addNebula(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "EasyPatch") then
				easyPatch(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)			
			elseif (iCount.class == "EasyPatch1") then
				easyPatch1(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)		
      elseif (iCount.class == "EasyPatch2") then
				easyPatch2(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)		
      elseif (iCount.class == "EasyPatch3") then
				easyPatch3(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)								
			end			
		end
	end
end
function easyPatch(epX, epZ, epY)	
	--6 latch
  addAsteroid("Asteroid_10", {epX+0,                    epZ+0,                   epY+0,                }, 100, 0, 0, 0, 0)	
	addAsteroid("Asteroid_9",  {epX+random(450,550),      epZ+random(-200,200),    epY+random(-200,200), }, 100, 0, 0, 0, 0)
	addAsteroid("Asteroid_9",  {epX+random(-200,200),     epZ+random(450,550)*1.4, epY+random(-200,200), }, 100, 0, 0, 0, 0)	
  addAsteroid("Asteroid_8",  {epX+random(-200,200),     epZ+random(-200,200),    epY+random(450,550),  }, 100, 0, 0, 0, 0)		
	addAsteroid("Asteroid_8",  {epX+random(-200,200)*1.4, epZ-random(450,550),     epY+random(-200,200), }, 100, 0, 0, 0, 0)				  
	addAsteroid("Asteroid_7",  {epX-random(450,550),      epZ-random(450,550)*1.4, epY+random(-200,200), }, 100, 0, 0, 0, 0)
  addDustCloud("DustCloud_0", "DustCloud_0", {epX+random(-1000,1000), epZ+random(-1000,1000), epY+random(-1000,1000)}, {0, 0.6, 1, 1}, 0, random(6000,12000))	
	addDustCloud("DustCloud_0", "DustCloud_0", {epX+random(-1000,1000), epZ+random(-1000,1000), epY+random(-1000,1000)}, {0, 0.6, 1, 1}, 0, random(6000,12000))
	addDustCloud("DustCloud_0", "DustCloud_0", {epX+random(-1000,1000), epZ+random(-1000,1000), epY+random(-1000,1000)}, {0, 0.6, 1, 1}, 0, random(6000,12000))
end
levelDesc = "Ordos"
maxPlayers = 4
player =
{
	{id = 0, name = "Vaygr", resources = 1500, raceID = 2, startPos = 1,},
	{id = 1, name = "Hiigaran", resources = 1500, raceID = 1, startPos = 1,},
	{id = 2, name = "Vaygr", resources = 1500, raceID = 2, startPos = 1,},
	{id = 3, name = "Hiigaran", resources = 1500, raceID = 1, startPos = 1,},
}
function DetermChunk()
  --default nebula, this must be here
	addNebula("nebula_damage3", "nebula_damage3", {0, 0, 0}, { 0, 0, 0, 0}, 0, 0)
	addNebula("nebula_damage4", "nebula_damage4", {0, 0, 0}, { 0, 0, 0, 0}, 0, 0) 
  addNebula("nebula_damage5", "nebula_damage5", {0, 0, 0}, { 0, 0, 0, 0}, 0, 0) 
  addNebula("nebula_damage6", "nebula_damage6", {0, 0, 0}, { 0, 0, 0, 0}, 0, 0)
	addNebula("nebula_damage7", "nebula_damage7", {0, 0, 0}, { 0, 0, 0, 0}, 0, 0)
  setWorldBoundsInner({0, 0, 0}, {75000, 75000, 75000})
	setWorldBoundsOuter({0, 0, 0}, {76000, 76000, 76000})	  
	addAsteroid("Asteroid_4", {-38500, 15000, -38500}, random(0,100), 0, 0, 0, 0)
	addAsteroid("Asteroid_4", {38500, 15000, 38500}, random(0,100), 0, 0, 0, 0)
	addAsteroid("Asteroid_4", {-38500, -15000, 38500}, random(0,100), 0, 0, 0, 0)
	addAsteroid("Asteroid_4", {38500, -15000, -38500}, random(0,100), 0, 0, 0, 0)
	addAsteroid("Asteroid_3", {-35000, 14400, -36500}, random(0,100), 0, 0, 0, 0)
	addAsteroid("Asteroid_3", {35000, 14400, 36500}, random(0,100), 0, 0, 0, 0)
	addAsteroid("Asteroid_3", {-35000, -14400, 36500}, random(0,100), 0, 0, 0, 0)
	addAsteroid("Asteroid_3", {35000, -14400, -36500}, random(0,100), 0, 0, 0, 0)
	addSquadron("planet", "tralus", {-280000, 50000, 280000}, -1, {0, 45, 0}, 0, 0)
	createSOBGroup("sob_AllBlackholes")
  addSquadron("sqd_Blackhole1", "zzz_blackhole_green", {0, 0, 0}, -1, {4, 0, 0}, 0, 0)
  createSOBGroup("sob_Blackhole1")
  addToSOBGroup("sqd_Blackhole1", "sob_Blackhole1")
  addToSOBGroup("sqd_Blackhole1", "sob_AllBlackholes")
	addSquadron("meg_engineeringbay", "meg_engineeringbay", {0, 16500, 0}, -1, {random(0,30), random(0,360), random(0,30)}, 0, 0)
	addSquadron("meg_engineeringbay", "meg_engineeringbay", {0, -16500, 0}, -1, {random(0,30), random(0,360), random(0,30)}, 0, 0)		
  local playerPositionRing =
	{
		Point0 =
		{
			class = "Point",
			name = "StartPos",		
			rotation = "toCenter",		
			teams = 0,		
			bias = 0,		
			number = 2,	
		},              
	}		
	local RU__Hidden_DustCloud_6Latch_x2 =
	{
		RU__Hidden_DustCloud_6Latch_x2 =
		{
			class = "EasyPatch",
			number = 2,
		},
	}
	ringAdd(0, 0, 16000, playerPositionRing,		62000,		62000,		0,			0,			0,		0,		    47,	407,	0)
	ringAdd(0, 0, -16000, playerPositionRing,		62000,		62000,		0,			0,			0,		0,		    -47,	313,	0)	
  ringAdd(0, 0, 0, RU__Hidden_DustCloud_6Latch_x2,		60000,		60000,		0,			0,			1,		0,		    0,	360,	0)			
	for i = 1, 60, 1 do	  
	  local u = random(-32000,32000)
		local v = random(-32000,32000)		
		addAsteroid("Asteroid_"..random(3,4), {u, u*v/64000, v}, random(0,100), 0, 0, 0, 0)				
		if i <= 30 then
			addNebula("nebula_damage4", "nebula_damage4", {u+random(-100,100), u*v/64000+random(-100,100), v+random(-100,100)}, { 0, 1, 0, 0.8}, 0, random(10000,15000))
	    addPebble("Pebble_0", {u+random(-100,100), u*v/64000+random(-100,100), v+random(-100,100)}, 0, 0, 0)	  		 
		end
	end		
	for i = 1, 5, 1 do	  
	  addSquadron("meg_veildebris_chunk"..i, "meg_veildebris_chunk"..i, { random(-7000,7000), random(0,10500), random(-7000,7000), }, -1, { random(0,360), random(0,360), random(0,360), }, 0, 0)
    addSquadron("meg_veildebris_chunk"..i, "meg_veildebris_chunk"..i, { random(-7000,7000), random(-10500,0), random(-7000,7000), }, -1, { random(0,360), random(0,360), random(0,360), }, 0, 0)
    addSalvage("Slv_Chunk_Lrg0"..i, { random(-7000,7000), random(-10500,10500), random(-7000,7000), }, 100, 0, 0, 0, 0)
		addSalvage("Slv_Chunk_Sml0"..i, { random(-7000,7000), random(-10500,10500), random(-7000,7000), }, 100, 0, 0, 0, 0)
	end		
	addNebula("nebula_damage5", "nebula_damage5", {0, 0, 0}, { 0, 1, 0, 1}, 0, 40000)
	addNebula("nebula_damage6", "nebula_damage6", {0, 0, 0}, { 0, 1, 0, 1}, 0, 20000)  
	addNebula("nebula_damage7", "nebula_damage7", {0, 0, 0}, { 0, 1, 0, 1}, 0, 10000)	
end
function NonDetermChunk()
  fogSetActive (1)
  fogSetStart (10)
  fogSetEnd (20000)
  fogSetColour(0, 0.133333, 0, 1)
  fogSetType ("linear")
  fogSetDensity (0.1)
  setGlareIntensity (0)
  setLevelShadowColour(0, 0, 0, 1)
		setSensorsManagerCameraDistances(61000, 120000)
    loadBackground ("pale_green")
end