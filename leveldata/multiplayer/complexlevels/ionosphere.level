startNum = 0
function ringAdd(fPosX, fPosY, fPosZ, rDistTable, fAxis1, fAxis2, fWidth, fThickness, fRotY, fRotZ, fArc1, fArc2, iMode)
	local width, thick, arc, theta, thetaX, thetaY, thetaZ, rotyX, rotyY, rotyZ, rotzX, rotzY, rotzZ, cooX, cooY, cooZ = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
	local minAxis = min(fAxis1, fAxis2)
	local majAxis = max(fAxis1, fAxis2)
	local minArc = min(fArc1, fArc2)
	local maxArc = max(fArc1, fArc2)
	for k, iCount in rDistTable do
		for i = 1, iCount.number do
			if (iMode == 1) then		--if set to random mode
				theta = random(minArc, maxArc)
				thetaX = cos(theta)*(majAxis + random(fWidth/-2, fWidth/2))
				thetaY = sin(theta)*sqrt((majAxis + random(fWidth/-2, fWidth/2))^2 - majAxis^2 + minAxis^2)
				thetaZ = random(fThickness/-2, fThickness/2)
			elseif (iMode == 0) then		--if set to non-random mode
				theta = minArc + arc
				thetaX = cos(theta)*majAxis		--(majAxis + fWidth/-2 + width)
				thetaY = sin(theta)*minAxis		--sqrt((majAxis + fWidth/-2 + width)^2 - majAxis^2 + minAxis^2)
				thetaZ = 0		--(fThickness/-2 + thick)
			end
			arc = arc + (maxArc-minArc)/iCount.number
			width = width + fWidth/iCount.number
			thick = thick + fThickness/iCount.number
			rotyX = sin(fRotY)*thetaZ + cos(fRotY)*thetaX
			rotyY = thetaY
			rotyZ = cos(fRotY)*thetaZ - sin(fRotY)*thetaX
			rotzX = cos(fRotZ)*rotyX - sin(fRotZ)*rotyY
			rotzY = sin(fRotZ)*rotyX + cos(fRotZ)*rotyY
			rotzZ = rotyZ
			cooX = rotzX
			cooY = rotzY
			cooZ = rotzZ
			if (iCount.class == "Point") then
				if (iCount.name == "StartPos") then
					if startNum == 0 then
					  addPoint(iCount.name .. startNum, {fPosX + cooX + random(-100,100), fPosZ + cooZ + random(-100,100), fPosY + cooY + random(-100,100),}, {0, -90, 0})					
					else
					  addPoint(iCount.name .. startNum, {fPosX + cooX + random(-100,100), fPosZ + cooZ + random(-100,100), fPosY + cooY + random(-100,100),}, {0, -90 - startNum * 90, 0})
					end  
					startNum = startNum + 1					
				else
					addPoint(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})
				end
			elseif (iCount.class == "Sphere") then
				addSphere(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.size)
			elseif (iCount.class == "Camera") then
				addCamera(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})
			elseif (iCount.class == "Squadron") then
				addSquadron(iCount.name .. (i-1), iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.player, iCount.rotation, 0, 0)
			elseif (iCount.class == "Asteroid") then
				addAsteroid(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 100, 0, 0, 0, 0)
			elseif (iCount.class == "Salvage") then
				addSalvage(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 100, 0, 0, 0, 0)
			elseif (iCount.class == "Pebble") then
				addPebble(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 0, 0, 0)
			elseif (iCount.class == "Cloud") then
				addCloud(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "DustCloud") then
				addDustCloud(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "Nebula") then
				addNebula(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "EasyPatch") then
				easyPatch(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)
			elseif (iCount.class == "EasyPatch1") then
				easyPatch1(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)
			elseif (iCount.class == "EasyPatch2") then
				easyPatch2(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)
			end
		end
	end
end
function asteroidAdd(fPosX, fPosY, fPosZ, sLayout, rDistTable, a, b, c, fRotY, fRotZ)
	-- function created by Mikail
	local rel, cooX, cooY, cooZ = 0, 0, 0, 0
	for k, iCount in rDistTable do
		rel = rel + iCount.number
	end
	for k, iCount in rDistTable do
		local minAB, maxAB = min(a, b), max(a, b)
		for i = 1, iCount.number do		--for i = 1, num*iCount.number do
			local r, u, v, l, w, h = random(minAB, maxAB), random(0, 180), random(0, 360), random(-0.5*a, 0.5*a), random(-0.5*b, 0.5*b), random(-0.5*c, 0.5*c)
			if sLayout == "Cylinder" then
				cooX = cos(fRotZ)*(sin(fRotY)*h + cos(fRotY)*r*cos(v)) - sin(fRotZ)*r*sin(v)
				cooY = sin(fRotZ)*(sin(fRotY)*h + cos(fRotY)*r*cos(v)) + cos(fRotZ)*r*sin(v)
				cooZ = cos(rotY)*h - sin(rotY)*r*cos(v)
			elseif sLayout == "Sphere" then
				cooX = sqrt(r^2-(r*cos(u))^2)*cos(v)
				cooY = sqrt(r^2-(r*cos(u))^2)*sin(v)
				cooZ = r*cos(u);
			elseif sLayout == "Box" then
				cooX = cos(fRotZ)*(sin(fRotY)*h + cos(fRotY)*l) - sin(fRotZ)*w
				cooY = sin(fRotZ)*(sin(fRotY)*h + cos(fRotY)*l) + cos(fRotZ)*w
				cooZ = cos(fRotY)*h - sin(fRotY)*l
			end
			if (iCount.class == "Point") then
				if (iCount.name == "StartPos") then
					addPoint(iCount.name .. startNum, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})
					startNum = startNum + 1					
				else
					addPoint(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})
				end
			elseif (iCount.class == "Sphere") then
				addSphere(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.size)
			elseif (iCount.class == "Camera") then
				addCamera(iCount.name .. (i-1), {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, {0, 0, 0})
			elseif (iCount.class == "Squadron") then
				addSquadron(iCount.name .. (i-1), iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.player, iCount.rotation, 0, 0)
			elseif (iCount.class == "Asteroid") then
				addAsteroid(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 100, 0, 0, 0, 0)
			elseif (iCount.class == "Salvage") then
				addSalvage(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 100, 0, 0, 0, 0)
			elseif (iCount.class == "Pebble") then
				addPebble(iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, 0, 0, 0)
			elseif (iCount.class == "Cloud") then
				addCloud(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "DustCloud") then
				addDustCloud(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "Nebula") then
				addNebula(iCount.kind, iCount.type, {fPosX + cooX, fPosZ + cooZ, fPosY + cooY,}, iCount.color, 0.0, iCount.size)
			elseif (iCount.class == "EasyPatch") then
				easyPatch(fPosX + cooX, fPosZ + cooZ, fPosY + cooY)
			end
		end
	end
end
function easyPatch(epX, epZ, epY)	
	local easyPatchDist =
	{ 	  
	  Asteroid_5 = {1, 0, 0,},   --450 spazio
		Asteroid_4 = {1, 450, 750,},   --300 
		Asteroid_3 = {1, 800, 1050,},   --250 
		Asteroid_2 = {2, 1075, 1100,},   --150
		Asteroid_1 = {2, 1125, 1150,},   --100
	}
	for k, iCount in easyPatchDist do
		for j = 1, iCount[1] do
			local r, phi, theta = random(iCount[2], iCount[3]), random(0, 360), random(0, 360)
			addAsteroid(k, {epX + sqrt(r^2-(r*cos(phi))^2)*cos(theta), epZ + r*cos(phi), epY + sqrt(r^2-(r*cos(phi))^2)*sin(theta),}, 100, 0, 0, 0, 0)
		end
	end
end
levelDesc = "Ionosphere"
maxPlayers = 6
player =
{
	{id = 0, name = "Vaygr", resources = 5000, raceID = 2, startPos = 1,},
	{id = 1, name = "Hiigaran", resources = 5000, raceID = 1, startPos = 1,},	
	{id = 2, name = "Vaygr", resources = 5000, raceID = 2, startPos = 1,},
	{id = 3, name = "Hiigaran", resources = 5000, raceID = 1, startPos = 1,},	
	{id = 4, name = "Vaygr", resources = 5000, raceID = 2, startPos = 1,},
	{id = 5, name = "Hiigaran", resources = 5000, raceID = 1, startPos = 1,},	
	}
function DetermChunk()
	setWorldBoundsInner({0, 0, 0}, {50000, 50000, 50000})	
	setWorldBoundsOuter({0, 0, 0}, {690000, 360000, 690000})
	addSquadron("earth", "earth_huge", {0, -350000, 0}, -1, {random(0,360), random(0,360), random(0,360)}, 0, 0)	  

	local u = random(0,360)
	local v = random(0,360)
	local r = 30000
	local num = random(600,700)
	for i = 1, num, 1 do
		u = random(0,360)
		v = random(0,360)
		if random(0,10) < 7 then
			addNebula("polySurface3", "M11_Bentusi_Radiation", {r*sin(u), r*sin(u+v), r*sin(v)}, {0, 0.01*random(90,100), 1, 1}, 100.00, random(9000,11000))
		else
			addAsteroid("Asteroid_"..random(1,5), {r*sin(u), r*sin(u+v), r*sin(v)}, random(0,100), 0, 0, 0, 0)
		end
	end

	local playerPositionRing =
	{
		Point0 =
		{
			class = "Point",
			name = "StartPos",		
			rotation = "toCenter",		
			teams = 0,		
			bias = 0,		
			number = 4,	
		},              
	}
	local playerPatchRing =
	{
		EasyPatch0 =
		{
			class = "EasyPatch",
			number = 4,
		},
	}	
	
	local PatchSalvage =
	{
		PatchSalvage1 =
		{
			class = "Squadron",
			name = "evac1",
			type = "meg_bentus_ruin_"..random(1,11),
			rotation = {0, 90, 0,},
			player = -1,
			number = 1,
		},
		PatchSalvage2 =
		{
			class = "Squadron",
			name = "evac2",
			type = "meg_bentus_ruin_"..random(1,11),
			rotation = {0, 90, 0,},
			player = -1,
			number = 1,
		},
		PatchSalvage3 =
		{
			class = "Squadron",
			name = "evac3",
			type = "meg_bentus_ruin_"..random(1,11),
			rotation = {0, 90, 0,},
			player = -1,
			number = 1,
		},		
		PatchSalvage4 =
		{
			class = "Squadron",
			name = "evac4",
			type = "meg_bentus_ruin_"..random(1,11),
			rotation = {0, 90, 0,},
			player = -1,
			number = 1,
		},
		PatchSalvage5 =
		{
			class = "Squadron",
			name = "evac5",
			type = "meg_bentus_ruin_"..random(1,11),
			rotation = {0, 90, 0,},
			player = -1,
			number = 1,
		},	
		PatchSalvage6 =
		{
			class = "Squadron",
			name = "evac6",
			type = "meg_bentus_ruin_"..random(1,11),
			rotation = {0, 90, 0,},
			player = -1,
			number = 1,
		},
		PatchSalvage7 =
		{
			class = "Squadron",
			name = "evac7",
			type = "meg_bentus_ruin_"..random(1,11),
			rotation = {0, 90, 0,},
			player = -1,
			number = 1,
		},
		PatchSalvage8 =
		{
			class = "Squadron",
			name = "evac8",
			type = "meg_bentus_ruin_"..random(1,11),
			rotation = {0, 90, 0,},
			player = -1,
			number = 1,
		},
		PatchSalvage9 =
		{
			class = "Squadron",
			name = "evac9",
			type = "meg_bentus_ruin_"..random(1,11),
			rotation = {0, 90, 0,},
			player = -1,
			number = 1,
		},	
		PatchSalvage10 =
		{
			class = "Squadron",
			name = "evac10",
			type = "meg_bentus_ruin_"..random(1,11),
			rotation = {0, 90, 0,},
			player = -1,
			number = 1,
		},	
		Cloud0 =
		{
			class = "DustCloud",
			kind = "polySurface1",
			type = "DustCloud_0",
			color = {1, 1, 1, 1},
			size = 5500,
			number = 2,
		},				
	}	
	local PatchSalvageDebris =
	{			
		debris1 =
		{
			class = "Squadron",
			name = "debris1",
			type = "meg_veildebris_chunk3",
			rotation = {-29, -135, 226,},
			player = -1,
			number = 1,
		},	
		Cloud0 =
		{
			class = "DustCloud",
			kind = "polySurface1",
			type = "DustCloud_0",
			color = {1, 1, 1, 1},
			size = 5500,
			number = 1,
		},	
	}					
	
	local meg_tanis =
	{
		meg_tanis =
		{
			class = "Squadron",
			name = "meg_tanis",
			type = "meg_tanis",
			rotation = {0, 45+180, 0,},
			player = -1,
			number = 1,
		},			
	}		
	local meg_tanis1 =
	{
		meg_tanis1 =
		{
			class = "Squadron",
			name = "meg_tanis1",
			type = "meg_tanis",
			rotation = {0, 135+180, 0,},
			player = -1,
			number = 1,
		},			
	}		
	local meg_tanis2 =
	{
		meg_tanis2 =
		{
			class = "Squadron",
			name = "meg_tanis2",
			type = "meg_tanis",
			rotation = {0, -45+180, 0,},
			player = -1,
			number = 1,
		},			
	}		
	local meg_tanis3 =
	{
		meg_tanis3 =
		{
			class = "Squadron",
			name = "meg_tanis3",
			type = "meg_tanis",
			rotation = {0, -135+180, 0,},
			player = -1,
			number = 1,
		},			
	}		
	
	local meg_balcoragate =
	{
		meg_balcoragate =
		{
			class = "Squadron",
			name = "meg_balcoragate",
			type = "meg_balcoragate",
			rotation = {0, 90, 0,},
			player = -1,
			number = 1,
		},			
	}		
	local meg_balcoragate1 =
	{
		meg_balcoragate1 =
		{
			class = "Squadron",
			name = "meg_balcoragate1",
			type = "meg_balcoragate",
			rotation = {0, -90, 0,},
			player = -1,
			number = 1,
		},			
	}		
	local meg_gehenna =
	{
		Gohenna =
		{
			class = "Squadron",
			name = "Gohenna",
			type = "meg_gehenna_1ctm",
			rotation = {5, -40, -5,},
			player = -1,
			number = 1,
		},			
	}	
	local meg_gehenna1 =
	{
		Gohenna1 =
		{
			class = "Squadron",
			name = "Gohenna1",
			type = "meg_gehenna_1ctm",
			rotation = {-5, 40, 5,},
			player = -1,
			number = 1,
		},			
	}																								
	ringAdd(0, 0, 0, playerPositionRing,		38750,		38750,		0,			0,			0,		0,		0,	360,	0)
	addPoint("StartPos4", {random(-100,100), 38750 + random(-100,100), random(-100,100),}, {0, -90, 0})
	addPoint("StartPos5", {random(-100,100), -38750 + random(-100,100), random(-100,100),}, {0, 90, 0})
	ringAdd(0, 0, 0, playerPatchRing,		41750,		41750,		0,			0,			-2,		0,		7,	367,	0)	
	ringAdd(0, 0, 0, playerPatchRing,		29750,		29750,		0,			0,			2,		0,		16,	376,	0)	
	
	for i = 0, 8, 1 do
		addAsteroid("Asteroid_"..random(1,5), {random(-2000,2000), 36000+random(1000,2000), random(-2000,2000)}, random(80,100), 0, 0, 0, 0)
		addAsteroid("Asteroid_"..random(1,5), {random(-2000,2000), -36000-random(1000,2000), random(-2000,2000)}, random(80,100), 0, 0, 0, 0)
	end
	
	asteroidAdd(12250, 12250, 0, "Box", meg_tanis, 0, 0, 0, 0, 0)
	asteroidAdd(12250, -12250, 0, "Box", meg_tanis1, 0, 0, 0, 0, 0)
	asteroidAdd(-12250, 12250, 0, "Box", meg_tanis2, 0, 0, 0, 0, 0)
	asteroidAdd(-12250, -12250, 0, "Box", meg_tanis3, 0, 0, 0, 0, 0)
	
	--asteroidAdd(26500, -11500, 1000, "Box", PatchSalvage, random(3000, 6000), random(3000, 6000), random(3000, 6000), random(0, 360), random(0, 360))
	--asteroidAdd(26500, -11500, 1000, "Box", PatchSalvageDebris, random(0, 150), random(0, 150), random(0, 150), random(0, 360), random(0, 360))
	--asteroidAdd(-26500, 11500, -1000, "Box", PatchSalvage, random(3000, 6000), random(3000, 6000), random(3000, 6000), random(0, 360), random(0, 360))
	--asteroidAdd(-26500, 11500, -1000, "Box", PatchSalvageDebris, random(0, 75), random(0, 75), random(0, 75), random(0, 360), random(0, 360))
	
end
function NonDetermChunk()
  fogSetActive (1)
  fogSetStart (10)
  fogSetEnd (20000)
  fogSetColour(0.136719, 0.228516, 0.427734, 1)
  fogSetType ("linear")
  fogSetDensity (0.15)
  setGlareIntensity (0)
  setLevelShadowColour(0, 0, 0, 1)
	setSensorsManagerCameraDistances(61000, 120000)
	loadBackground("space_nebula")	
end
