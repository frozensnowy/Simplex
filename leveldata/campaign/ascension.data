-- initialize campaign state, then override it later with "MissionGrid_record.lua" if it exists
campaignStarted = 0
currentMission = 1
sectorsCleared = {0,0,0,0,0,0,0,0,0,0,0,0,}	-- make sure there's one for every mission

-- there should be one item in the spheres table for every mission
-- each mission has up to four exit spheres: 1. east, 2. south, 3. west, 4. north
-- each sphere has four parameters: 1. the mission the exit leads to, 2. the sphere's location, 3. the sphere's radius, 4. the ping's text label
exitSpheres =
{
	-- row 1
	{
		-- Mission 1 exits removed since they are defined in mission script
		nil,
		nil,
		nil,
		nil,
	},
	{
		{"mission_03", { 15000, 0, 0,}, 5000, "Proceed east to sector C1.",},
		{"mission_06", { 0, 0, 15000,}, 5000, "Proceed south to sector B2.",},
		{"mission_01", {-15000, 0, 0,}, 5000, "Proceed west to sector A1.",},
		nil,
	},
	{
		{"mission_04", { 15000, 0, 0,}, 5000, "Proceed east to sector D1.",},
		{"mission_07", { 0, 0, 15000,}, 5000, "Proceed south to sector C2.",},
		{"mission_02", {-15000, 0, 0,}, 5000, "Proceed west to sector B1.",},
		nil,
	},
	{
		nil,
		{"mission_08", { 0, 0, 15000,}, 5000, "Proceed south to sector D2.",},
		{"mission_03", {-15000, 0, 0,}, 5000, "Proceed west to sector C1.",},
		nil,
	},
	-- row 2
	{
		{"mission_06", { 15000, 0, 0,}, 5000, "Proceed east to sector B2.",},
		{"mission_09", { 0, 0, 15000,}, 5000, "Proceed south to sector A3.",},
		nil,
		{"mission_01", { 0, 0,-15000,}, 5000, "Proceed north to sector A1.",},
	},
	{
		{"mission_07", { 15000, 0, 0,}, 5000, "Proceed east to sector C2.",},
		{"mission_10", { 0, 0, 15000,}, 5000, "Proceed south to sector B3.",},
		{"mission_05", {-15000, 0, 0,}, 5000, "Proceed west to sector A2.",},
		{"mission_02", { 0, 0,-15000,}, 5000, "Proceed north to sector B1.",},
	},
	{
		{"mission_08", { 15000, 0, 0,}, 5000, "Proceed east to sector D2.",},
		{"mission_11", { 0, 0, 15000,}, 5000, "Proceed south to sector C3.",},
		{"mission_06", {-15000, 0, 0,}, 5000, "Proceed west to sector B2.",},
		{"mission_03", { 0, 0,-15000,}, 5000, "Proceed north to sector C1.",},
	},
	{
		nil,
		{"mission_12", { 0, 0, 15000,}, 5000, "Proceed south to sector D3.",},
		{"mission_07", {-15000, 0, 0,}, 5000, "Proceed west to sector C2.",},
		{"mission_04", { 0, 0,-15000,}, 5000, "Proceed north to sector D1.",},
	},
	-- row 3
	{
		{"mission_10", { 15000, 0, 0,}, 5000, "Proceed east to sector B3.",},
		nil,
		nil,
		{"mission_05", { 0, 0,-15000,}, 5000, "Proceed north to sector A2.",},
	},
	{
		{"mission_11", { 15000, 0, 0,}, 5000, "Proceed east to sector C3.",},
		nil,
		{"mission_09", {-15000, 0, 0,}, 5000, "Proceed west to sector A3.",},
		{"mission_06", { 0, 0,-15000,}, 5000, "Proceed north to sector B2.",},
	},
	{
		{"mission_12", { 15000, 0, 0,}, 5000, "Proceed east to sector D3.",},
		nil,
		{"mission_10", {-15000, 0, 0,}, 5000, "Proceed west to sector B3.",},
		{"mission_07", { 0, 0,-15000,}, 5000, "Proceed north to sector C2.",},
	},
	{
		nil,
		nil,
		{"mission_11", {-15000, 0, 0,}, 5000, "Proceed west to sector C3.",},
		{"mission_08", { 0, 0,-15000,}, 5000, "Proceed north to sector D2.",},
	},
}

-- add these values to the current mission to get the next mission, should really be calculated dynamically
addMissions =
{
	1,	-- east
	4,	-- south
	-1,	-- west
	-4,	-- north
}

-- have to use ascension or the game will crash
campaignLabel = [[ascension]]

-- if you don't have any images, or want to cut down on file size, you can use this placeholder: [[Data:UI\MapThumbnails\Campaign\Default.tga]].
campaignTable =
{
	ascension =
	{
		title = [[Postmortem]],
		titlecaps = [[POSTMORTEM]],
		description = [[Details about the Postmortem campaign.]],
		background = [[Data:leveldata\campaign\ascension_galaxymap.rot]],
		backgroundUV = {0,0,800,800},		-- should be square
		useBackground = 1,
		useThumbnails = 0,
		nummissions = 12,
		missions =
		{
			-- row 1
			{
				displayName = "Sector A1",
				description = "Build a Ship",
				thumb = [[Data:UI\MapThumbnails\Campaign\ascension\m01_tanis.tga]],
				thumbUV = {0,0,484,388},
			},
			{
				displayName = "Sector B1",
				description = "Build a Subsytem",
				thumb = [[Data:UI\MapThumbnails\Campaign\ascension\m02_turanic.tga]],
				thumbUV = {0,0,484,388},
			},
			{
				displayName = "Sector C1",
				description = "Gather Resources",
				thumb = [[Data:UI\MapThumbnails\Campaign\ascension\m03_staging.tga]],
				thumbUV = {0,0,484,388},
			},
			{
				displayName = "Sector D1",
				description = "Capture Enemy Ship",
				thumb = [[Data:UI\MapThumbnails\Campaign\ascension\m04_outergeh.tga]],
				thumbUV = {0,0,484,388},
			},
			-- row 2
			{
				displayName = "Sector A2",
				description = "Destroy Enemy Ship",
				thumb = [[Data:UI\MapThumbnails\Campaign\ascension\m05_gehenna.tga]],
				thumbUV = {0,0,484,388},
			},
			{
				displayName = "Sector B2",
				description = "Destroy Enemy Subsystem",
				thumb = [[Data:UI\MapThumbnails\Campaign\ascension\m06_karos.tga]],
				thumbUV = {0,0,484,388},
			},
			{
				displayName = "Sector C2",
				description = "Defend a Ship",
				thumb = [[Data:UI\MapThumbnails\Campaign\ascension\m07_veil_of_fire.tga]],
				thumbUV = {0,0,484,388},
			},
			{
				displayName = "Sector D2",
				description = "Move a Ship",
				thumb = [[Data:UI\MapThumbnails\Campaign\ascension\m08_hangar.tga]],
				thumbUV = {0,0,484,388},
			},
			-- row 3
			{
				displayName = "Sector A3",
				description = "Find a Ship",
				thumb = [[Data:UI\MapThumbnails\Campaign\ascension\m09_outer_hangar.tga]],
				thumbUV = {0,0,484,388},
			},
			{
				displayName = "Sector B3",
				description = "Repair a Ship",
				thumb = [[Data:UI\MapThumbnails\Campaign\ascension\m10_bentusi.tga]],
				thumbUV = {0,0,484,388},
			},
			{
				displayName = "Sector C3",
				description = "Research an Item",
				thumb = [[Data:UI\MapThumbnails\Campaign\ascension\m11_final_core.tga]],
				thumbUV = {0,0,484,388},
			},
			{
				displayName = "Sector D3",
				description = "AI Testing",
				thumb = [[Data:UI\MapThumbnails\Campaign\ascension\m12_rescue.tga]],
				thumbUV = {0,0,484,388},
			},
		},
	},
}

-- tells which ships count as player motherships
motherships =
{
	"Hgn_Mothership",
}
